plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.11'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'aws.demo'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'software.amazon.awssdk:dynamodb:2.26.24'
	implementation 'com.amazonaws.serverless:aws-serverless-java-container-springboot3:2.1.2'
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.3'
    implementation 'com.amazonaws:aws-lambda-java-events:3.12.0'
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
    implementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.1.0'
    
	// Spring Boot starter for minimal setup
	implementation('org.springframework.boot:spring-boot-starter') {
		exclude group: 'com.fasterxml.jackson.core'
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	// AWS SDK for S3 (example)
	implementation('software.amazon.awssdk:s3:2.26.23') {
		exclude group: 'com.fasterxml.jackson.core'
		exclude group: 'com.fasterxml.jackson.dataformat'
		exclude group: 'com.fasterxml.jackson.module'
	}
	
	runtimeOnly 'org.springframework.boot:spring-boot-starter-json'
	
    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootJar') {
    // Ensure a fat JAR with all dependencies
    archiveClassifier = ''
}

tasks.register('buildLambdaJar', Jar) {
	dependsOn classes
	archiveFileName.set('todolist-service.jar')
	destinationDirectory.set(file("$buildDir/libs"))
	with {
		from {
			configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
		}
		from sourceSets.main.output
		// Exclude duplicate and unnecessary META-INF files
		exclude 'META-INF/LICENSE.txt', 'META-INF/NOTICE.txt', 'META-INF/INDEX.LIST', 'META-INF/.RSA', 'META-INF/.SF'
	}
	manifest {
		attributes 'Main-Class': 'aws.demo.todolist.LambdaHandler'
		duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	}
}